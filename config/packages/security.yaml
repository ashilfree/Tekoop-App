security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern:            /admin
            provider:  app_user_provider
            anonymous: true
            logout:
                path: /admin/logout
                target: /admin
            form_login:
                login_path: /admin/login
                check_path: admin.login
                use_referer: true
            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 5 # 2 weeks in seconds
            user_checker: App\Security\UserEnabledChecker
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\TokenAuthenticator
            user_checker: App\Security\UserEnabledChecker

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    role_hierarchy:
        ROLE_POSTER: ROLE_COMMENTATOR
        ROLE_ADMIN: ROLE_POSTER